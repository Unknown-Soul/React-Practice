1. Type of Exports in java (named and default Exports)
2. 
Use of ClassName instead of class
Fragments - <></>
Map Method - rendering list using Map -  use map instead of for loop in react
Key Props -  provide unique key to optimize rendering
Conditional Rendering
Passing Data via Props
Css Modules - localised classNames to avoid gloabal nameConflict - name Convention of file {sameNameAsJsxFile}.module.css . cass module add unique name infoent of our class name at time of comilation
Passing Children - children is by default argument that passed on to children
EventHandling -  uses CamelCase like onClick.
6-child-to-parent-communication-passing-function-via-prop
State-Management - State represent data that changes overtime. It changes bcz component re-render. Its local and private to a component
                 - useStateHook - repaint whole component
                 - deconstruct object = {}
                 - deconstruct array  = []
                 - hooks can only be used insite component
                 - state change cuase component rerender
                 - for functional components use useStateHook
State and Props :  State is local and mutable, intit inside component, can change overtime and cause re-render, manage using useState in functional components.
                   props passed into component from parent, immutable,allow paren - to -child component
child-to-parent-communication : happens using event. function passed by parents to child
react-icons
reac-developer-tool
react-form
2 way binding (input update state and state update input) 8:07
Use Ref -  Hook to access dom element and retain mutable value without re-render
 
Hooks-
useState
useRef - can store value temp but may not necessarly repaint the component.Retain mutable value without re-render
spread Operator and functional spread operator
Context API - states wich shared among many component we save state in seprate file called context file. context api solve issue of  prop drilling
we use context only in very limited manner as whenver context changes its repaint whole app :Note
Context Hook =  hook to use to use data stored in context API
USe Reducer - complex State -  kind of hook - 2 components -seprate the action and stateManagement. app not consider about statemanagemen
user Reducer is a Hook to help us manage complex logic  -  2 component  Reduer and action
intigrating API
Fetch, Promise
useEffect Hook - handle effects like event listner and data fetching
               - run after every render
               - we pass 2 paramter one action second is dependecny on chnage of which action take place or dependecy is empty

--------------Very Advance TOPICS--------
useCallBack Hook
useMemo Hook 
use Custom Hook
--------------------------------------
fetching data from server
routers- npm install react-router-dom
router-link = use to at place href and at place of <a> use <Link>
use Navigate =  hook to automatically redirect or navigate
--------------
00:00 Introduction
02:30 Ch-1-6: Introduction { React and Components}
34:10 Ch-7-9: Create React App {IDE, Using Vite, Project Structure}
1:08:01 Ch-10-16: Creating React Components {File Extensions, Class vs Function Components, JSX, Dynamic and Reusable components}
1:54:21 Ch-17: Introducing Bootstrap
2:12:31 Project: Todo App Version 1
2:49:51 Project: Bharat Clock Version 1
3:03:24 Ch-18-22: React Level 2 {Fragments, Rendering lists using Map Method, Conditional Rendering, Passing Data via Props, CSS Modules}
4:07:54 Project Todo App Version 2
4:26:35 Project: Calculator Version 1
4:50:45 Ch-23-25: React Level 3 {Passing Components as Children, Handling Events, Passing Functions via Props}
5:38:45 Ch-26-27: State Management {useState Hook to manage Component State, State vs Props}
6:22:20 Project: Calculator Version 2
6:41:34 Project: Todo App Version 3
7:23:50 Ch-28-34: React Level 3 {React-Icon Library, Inspecting with React Dev Tools, How React Works, React vs Angular vs VueJs, Forms in React, useRef Hook, Spread operator and Functional updates}
8:38:30 Ch-35-36: Advanced State Management {Context API, useReducer Hook}
9:42:40 Project: Social Media Version 1
11:41:22 Ch-37-42: React Level 4 {Backend Dummy API, Data Fetching using Fetch function, useEffect Hook, Handling loading State, useEffect Hook Cleanup, Advanced useEffect }
12:54:45 Project: Bharat Clock Version 2
13:09:05 Ch-43-45: More Hooks {useCallback Hook, useMemo Hook, Custom Hooks}
13:28:40 Ch-46: Submitting data with Fetch
14:00:10 Ch-47-51: React Router {Router Layout routes, Router Links and Navigation, Data fetching using loader, Submitting data using action}
14:55:23 Ch-52-56: Redux {Introduction, React-Context vs Redux, How Redux Works, Working with Redux, React with Redux}
16:35:25 Ch-57-58: Redux ToolKit {Need, Working with Toolkit}
17:19:10 Major Project Myntra Clone using Real Backend

-------css---

what are block element
what is flex